{"version":3,"sources":["TabPanel.js","Worker/WorkerFilterCollection.js","Worker/worker.jpg","Worker/CreateWorkerDialog.js","Worker/EditWorkerDialog.js","NumberInput.js","Worker/WorkerTabPanel.js","Organizations/OrganizationFilterCollection.js","Organizations/team.jpg","Organizations/CreateOrganizationDialog.js","Organizations/EditOrganizationDialog.js","Organizations/OrganizationTabPanel.js","Coordinates/CoordinatesFilterCollection.js","Coordinates/map.jpg","Coordinates/CreateCoordinatesDialog.js","Coordinates/EditCoordinatesDialog.js","Coordinates/CoordinatesTabPanel.js","App.js","index.js"],"names":["TabPanel","props","children","value","index","other","role","hidden","id","Box","sx","p","mt","WorkerFilterCollection","fieldOptions","predicateOptions","useState","filterField","setFilterField","filterPredicate","setFilterPredicate","filterValue","setFilterValue","display","gap","Autocomplete","size","onChange","e","options","renderInput","params","TextField","label","target","Button","variant","onClick","updateFilters","filters","concat","field","predicate","color","sortOrder","newSort","order","setSortOrder","updateSortField","updateSortOrder","map","filter","i","Typography","CreateWorkerDialog","organizations","setOrganizations","coordinates","setCoordinates","position","startDate","endDate","worker","setWorker","errors","setErrors","submitting","setSubmitting","useEffect","axios","get","then","response","console","log","data","catch","requestError","setProperError","validateWorkerOnSubmit","useCallback","newErrors","name","length","salary","Object","keys","workerDto","coordinatesId","format","organization","organizationId","post","handleClose","Dialog","open","onClose","maxWidth","DialogTitle","DialogContent","backgroundImage","workerImg","backgroundSize","backgroundPosition","style","fontFamily","assign","error","helperText","getOptionLabel","option","JSON","stringify","fullName","DateTimePicker","newValue","DialogActions","LoadingButton","EditWorkerDialog","item","dayjz","parse","deleteWorker","delete","put","NumberFormatCustom","React","onValueChange","values","isNumericString","NumberInput","placeholder","InputProps","inputComponent","WorkerTabPanel","enqueueSnackbar","useSnackbar","require","default","openCreateWorkerDialog","setOpenCreateWorkerDialog","isSalaryLoaded","setIsSalaryLoaded","isGridLoaded","setIsGridLoaded","isTotalLoaded","setIsTotalLoaded","items","setItems","selectedItem","setSelectedItem","salarySum","setSalarySum","displayedNow","setDisplayedNow","totalForFilter","setTotalForFilter","page","setPage","pageSize","setPageSize","filterCombination","setFilterCombination","updateSelectedItem","selectionModel","details","newSelected","find","newError","Message","request","message","updateDataGrid","sort","type","fieldName","newData","current","newCurrent","updateDataGridWithFilter","predicateType","fieldValue","method","url","responseType","Grid","container","spacing","xl","height","Math","max","min","disableColumnFilter","rows","columns","headerName","width","sortable","hideFooter","onSelectionModelChange","mb","OrganizationFilterCollection","CreateOrganizationDialog","annualTurnover","setOrganization","validateOrganizationOnSubmit","organizationDto","teamImg","EditOrganizationDialog","deleteOrganization","OrganizationTabPanel","CoordinatesFilterCollection","CreateCoordinatesDialog","x","y","validateCoordinatesOnSubmit","coordinatesDto","mapImg","EditCoordinatesDialog","CoordinatesTabPanel","a11yProps","App","setValue","backgroundColor","Tabs","event","centered","indicatorColor","Tab","defaults","baseURL","interceptors","use","config","paramsSerializer","queryString","arrayFormat","notistackRef","createRef","onClickDismiss","key","closeSnackbar","utc","timezone","extend","document","title","ReactDOM","render","StrictMode","rel","href","maxSnack","hideIconVariant","ref","action","LocalizationProvider","dateAdapter","DateAdapter","getElementById"],"mappings":"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","file":"static/js/main.4ca61a76.chunk.js","sourcesContent":["import * as React from 'react';\r\nimport {Box} from '@mui/material';\r\n\r\ninterface\r\nTabPanelProps\r\n{\r\n    children ? : React.ReactNode;\r\n    value : number;\r\n    index : number;\r\n}\r\n\r\nexport default function TabPanel(props: TabPanelProps) {\r\n    const {children, value, index, ...other} = props;\r\n\r\n    return (\r\n        <div\r\n            role=\"tabpanel\"\r\n            hidden={value !== index}\r\n            id={`simple-tabpanel-${index}`}\r\n            {...other}\r\n        >\r\n            {value === index && (\r\n                <Box sx={{p: 3, mt: 8}}>\r\n                    {children}\r\n                </Box>\r\n            )}\r\n        </div>\r\n    );\r\n}","import React, {useState} from \"react\";\r\nimport {Autocomplete, Box, Button, TextField, Typography} from '@mui/material';\r\n\r\nexport default function WorkerFilterCollection(props) {\r\n    function addNewFilter() {\r\n        props.updateFilters(props.filters.concat([{\r\n            field: filterField,\r\n            predicate: filterPredicate,\r\n            value: filterValue\r\n        }]));\r\n    }\r\n\r\n    function updateSortField(value) {\r\n        var newSort = {};\r\n        newSort.order = props.sortOrder.order;\r\n        newSort.field = value;\r\n        props.setSortOrder(newSort);\r\n    }\r\n\r\n    function updateSortOrder(value) {\r\n        var newSort = {};\r\n        newSort.field = props.sortOrder.field;\r\n        newSort.order = value;\r\n        props.setSortOrder(newSort);\r\n    }\r\n\r\n    const fieldOptions = ['name', 'salary', 'position', 'id', 'creationDate', 'startDate', 'endDate'];\r\n    const predicateOptions = ['EQ', 'GT', 'LT', 'LIKE'];\r\n    const sortOptions = ['ASC', 'DESC'];\r\n\r\n    const [filterField, setFilterField] = useState(fieldOptions[0]);\r\n    const [filterPredicate, setFilterPredicate] = useState(predicateOptions[0]);\r\n    const [filterValue, setFilterValue] = useState('');\r\n    return <Box display=\"grid\" gap={2}>\r\n        <Autocomplete size='small' value={filterField} onChange={(e, value) => {\r\n            setFilterField(value);\r\n        }} options={fieldOptions} renderInput={(params) => <TextField {...params} label=\"Field name\"/>}/>\r\n        <Autocomplete size='small' value={filterPredicate} onChange={(e, value) => {\r\n            setFilterPredicate(value);\r\n        }} options={predicateOptions} renderInput={(params) => <TextField {...params} label=\"Predicate\"/>}/>\r\n        <TextField size='small' label={filterField + ' value'} value={filterValue} onChange={(e) => {\r\n            setFilterValue(e.target.value);\r\n        }}/>\r\n        <Button variant=\"contained\" onClick={addNewFilter}>Add filter</Button>\r\n        <Button variant=\"contained\" color=\"secondary\" onClick={() => {\r\n            props.updateFilters([])\r\n        }}>Drop Filters</Button>\r\n        <Autocomplete size='small' value={props.sortOrder.field} onChange={(e, value) => {\r\n            updateSortField(value);\r\n        }} options={fieldOptions} renderInput={(params) => <TextField {...params} label=\"Sort field\"/>}/>\r\n        <Autocomplete size='small' value={props.sortOrder.order} onChange={(e, value) => {\r\n            updateSortOrder(value);\r\n        }} options={sortOptions} renderInput={(params) => <TextField {...params} label=\"Sort order\"/>}/>\r\n        {props.filters.map((filter, i) => {\r\n            return (<Typography key={'Typo_' + i}>{filter.field} {filter.predicate} {filter.value}</Typography>)\r\n        })}\r\n    </Box>\r\n}\r\n","export default __webpack_public_path__ + \"static/media/worker.3b4b346c.jpg\";","import React, {useCallback, useEffect, useState} from \"react\";\r\nimport {\r\n    Autocomplete,\r\n    Box,\r\n    Button,\r\n    Dialog,\r\n    DialogActions,\r\n    DialogContent,\r\n    DialogTitle,\r\n    TextField,\r\n    Typography\r\n} from '@mui/material';\r\nimport {LoadingButton} from '@mui/lab';\r\nimport DateTimePicker from '@mui/lab/DateTimePicker';\r\nimport axios from 'axios'\r\nimport workerImg from './worker.jpg';\r\n\r\nexport default function CreateWorkerDialog(props) {\r\n    const positions = ['DIRECTOR', 'HEAD_OF_DIVISION', 'HEAD_OF_DEPARTMENT', 'LEAD_DEVELOPER', 'BAKER'];\r\n\r\n    const [organizations, setOrganizations] = useState([]);\r\n    const [coordinates, setCoordinates] = useState([]);\r\n    const [worker, setWorker] = useState({position: null, startDate: null, endDate: null});\r\n    const [errors, setErrors] = useState({});\r\n    const [submitting, setSubmitting] = useState(false);\r\n\r\n    useEffect(() => {\r\n        axios.get('/organizations?pageSize=1000').then(function (response) {\r\n            console.log(response.data);\r\n            setOrganizations(response.data);\r\n        })\r\n            .catch(function (requestError) {\r\n                props.setProperError(requestError);\r\n            });\r\n\r\n        axios.get('/coordinates?pageSize=1000')\r\n            .then(function (response) {\r\n                console.log(response.data);\r\n                setCoordinates(response.data);\r\n            })\r\n            .catch(function (requestError) {\r\n                props.setProperError(requestError);\r\n            });\r\n    }, [setOrganizations, setCoordinates, props]);\r\n\r\n    const validateWorkerOnSubmit = useCallback(() => {\r\n        var newErrors = {};\r\n        if (!worker.name || worker.name.length === 0) {\r\n            newErrors['Name'] = 'Name should not be empty';\r\n        }\r\n        if (!worker.salary || worker.salary < 0) {\r\n            newErrors['Salary'] = 'Salary should be positive';\r\n        }\r\n        if (!worker.position) {\r\n            newErrors['Position'] = 'Position should be initialized';\r\n        }\r\n        if (!worker.startDate) {\r\n            newErrors['StartDate'] = 'Start date should be initialized';\r\n        }\r\n        if (!worker.coordinates) {\r\n            newErrors['Coordinates'] = 'Coordinates should be initialized';\r\n        }\r\n\r\n        if (Object.keys(newErrors).length === 0) {\r\n            var workerDto = {\r\n                name: worker.name,\r\n                salary: worker.salary,\r\n                position: worker.position,\r\n                coordinatesId: worker.coordinates.id,\r\n                startDate: worker.startDate.format('YYYY-MM-DDTHH:mm:ss'),\r\n            };\r\n            if (worker.organization) {\r\n                workerDto.organizationId = worker.organization.id;\r\n            }\r\n            if (worker.endDate) {\r\n                workerDto.endDate = worker.endDate;\r\n            }\r\n            setSubmitting(true);\r\n            axios.post('/workers', workerDto)\r\n                .then(function (response) {\r\n                    props.handleClose();\r\n                    setSubmitting(false);\r\n                })\r\n                .catch(function (requestError) {\r\n                    props.setProperError(requestError);\r\n                    setSubmitting(false);\r\n                });\r\n        }\r\n\r\n        setErrors(newErrors);\r\n    }, [worker, props, setSubmitting])\r\n\r\n    return (\r\n        <div>\r\n            <Dialog open={props.open} onClose={props.handleClose} maxWidth='xl'>\r\n                <DialogTitle>Create worker</DialogTitle>\r\n                <DialogContent>\r\n                    <Box display=\"grid\" gap={2} sx={{\r\n                        backgroundImage: `linear-gradient(rgba(255,255,255,0.9), rgba(255,255,255,0.9)), url(${workerImg})`,\r\n                        backgroundSize: 'contain',\r\n                        backgroundPosition: 'center'\r\n                    }}>\r\n                        <Typography>\r\n              <pre style={{fontFamily: 'inherit'}}>\r\n                {`public class Worker {\r\n    private int id; //Значение поля должно быть больше 0, Значение этого поля должно быть уникальным, Значение этого поля должно генерироваться автоматически\r\n    private String name; //Поле не может быть null, Строка не может быть пустой\r\n    private Coordinates coordinates; //Поле не может быть null\r\n    private java.time.LocalDateTime creationDate; //Поле не может быть null, Значение этого поля должно генерироваться автоматически\r\n    private float salary; //Значение поля должно быть больше 0\r\n    private java.time.LocalDateTime startDate; //Поле не может быть null\r\n    private java.time.ZonedDateTime endDate; //Поле может быть null\r\n    private Position position; //Поле не может быть null\r\n    private Organization organization; //Поле может быть null\r\n}`}\r\n              </pre>\r\n                        </Typography>\r\n                        <Typography>\r\n                            <b>Please, fill the fields according to the description to create new worker entity.</b>\r\n                        </Typography>\r\n                        {\r\n                            coordinates.length > 0 && organizations.length > 0 ? <Box display=\"grid\" gap={2}>\r\n                                <TextField size='small' label='Name' value={worker.name} onChange={(e) => {\r\n                                    worker.name = e.target.value;\r\n                                    setWorker(Object.assign({}, worker));\r\n                                }} {...(errors['Name'] && {error: true, helperText: errors['Name']})}/>\r\n                                <TextField size='small' label='Salary' value={worker.salary} onChange={(e) => {\r\n                                    worker.salary = e.target.value;\r\n                                    setWorker(Object.assign({}, worker));\r\n                                }} {...(errors['Salary'] && {error: true, helperText: errors['Salary']})}/>\r\n                                <Autocomplete value={worker.position} onChange={(e, value) => {\r\n                                    worker.position = value;\r\n                                    setWorker(Object.assign({}, worker));\r\n                                }} options={positions} renderInput={(params) => <TextField {...params} label='Position'\r\n                                                                                           size='small' {...(errors['Position'] && {\r\n                                    error: true,\r\n                                    helperText: errors['Position']\r\n                                })}/>}/>\r\n                                <Autocomplete value={worker.coordinates} onChange={(e, value) => {\r\n                                    worker.coordinates = value;\r\n                                    setWorker(Object.assign({}, worker));\r\n                                }} options={coordinates} getOptionLabel={(option) => {\r\n                                    return JSON.stringify(option)\r\n                                }} renderInput={(params) => <TextField {...params} label='Coordinates'\r\n                                                                       size='small' {...(errors['Coordinates'] && {\r\n                                    error: true,\r\n                                    helperText: errors['Coordinates']\r\n                                })}/>}/>\r\n                                <Autocomplete value={worker.organization} onChange={(e, value) => {\r\n                                    worker.organization = value;\r\n                                    setWorker(Object.assign({}, worker));\r\n                                }} options={organizations} getOptionLabel={(option) => {\r\n                                    return option.fullName + '_' + option.id\r\n                                }} renderInput={(params) => <TextField {...params} label='Organization'\r\n                                                                       size='small'/>}/>\r\n                                <DateTimePicker\r\n                                    renderInput={(props) => <TextField {...props}\r\n                                                                       size='small' {...(errors['StartDate'] && {\r\n                                        error: true,\r\n                                        helperText: errors['StartDate']\r\n                                    })}/>}\r\n                                    label=\"Start date\"\r\n                                    value={worker.startDate}\r\n                                    onChange={(newValue) => {\r\n                                        worker.startDate = newValue;\r\n                                        setWorker(Object.assign({}, worker));\r\n                                    }}\r\n                                />\r\n                                <DateTimePicker\r\n                                    renderInput={(props) => <TextField {...props} size='small'/>}\r\n                                    label=\"End date\"\r\n                                    value={worker.endDate}\r\n                                    onChange={(newValue) => {\r\n                                        worker.endDate = newValue;\r\n                                        setWorker(Object.assign({}, worker));\r\n                                    }}\r\n                                />\r\n                            </Box> : ''\r\n                        }\r\n                    </Box>\r\n                </DialogContent>\r\n                {\r\n                    submitting ? <DialogActions>\r\n                        <LoadingButton onClick={() => {\r\n                            setWorker({position: null, startDate: null, endDate: null});\r\n                            props.handleClose()\r\n                        }} color='secondary'>Cancel</LoadingButton>\r\n                        <LoadingButton onClick={() => {\r\n                            validateWorkerOnSubmit();\r\n                        }}>Create</LoadingButton>\r\n                    </DialogActions> : <DialogActions>\r\n                        <Button onClick={() => {\r\n                            setWorker({position: null, startDate: null, endDate: null});\r\n                            props.handleClose()\r\n                        }} color='secondary'>Cancel</Button>\r\n                        <Button onClick={() => {\r\n                            validateWorkerOnSubmit();\r\n                        }}>Create</Button>\r\n                    </DialogActions>\r\n                }\r\n            </Dialog>\r\n        </div>\r\n    );\r\n}","import React, {useCallback, useEffect, useState} from \"react\";\r\nimport {\r\n    Autocomplete,\r\n    Box,\r\n    Button,\r\n    Dialog,\r\n    DialogActions,\r\n    DialogContent,\r\n    DialogTitle,\r\n    TextField,\r\n    Typography\r\n} from '@mui/material';\r\nimport {LoadingButton} from '@mui/lab';\r\nimport DateTimePicker from '@mui/lab/DateTimePicker';\r\nimport axios from 'axios'\r\nimport dayjz from 'dayjs';\r\nimport workerImg from './worker.jpg';\r\n\r\nexport default function EditWorkerDialog(props) {\r\n    const positions = ['DIRECTOR', 'HEAD_OF_DIVISION', 'HEAD_OF_DEPARTMENT', 'LEAD_DEVELOPER', 'BAKER'];\r\n\r\n    const [organizations, setOrganizations] = useState([]);\r\n    const [coordinates, setCoordinates] = useState([]);\r\n    const [worker, setWorker] = useState({\r\n        id: props.item.id,\r\n        name: props.item.name,\r\n        position: props.item.position,\r\n        salary: props.item.salary,\r\n        startDate: dayjz(props.item.startDate),\r\n        endDate: props.item.endDate ? dayjz(props.item.endDate, \"YYYY-MM-DDTHH:mm:ssZ\") : null,\r\n        coordinates: JSON.parse(props.item.coordinates),\r\n        organization: props.item.organization ? JSON.parse(props.item.organization) : null,\r\n    });\r\n\r\n    const [errors, setErrors] = useState({});\r\n    const [submitting, setSubmitting] = useState(false);\r\n\r\n    useEffect(() => {\r\n        axios.get('/organizations?pageSize=1000').then(function (response) {\r\n            console.log(response.data);\r\n            setOrganizations(response.data);\r\n        })\r\n            .catch(function (requestError) {\r\n                props.setProperError(requestError);\r\n            });\r\n\r\n        axios.get('/coordinates?pageSize=1000')\r\n            .then(function (response) {\r\n                console.log(response.data);\r\n                setCoordinates(response.data);\r\n            })\r\n            .catch(function (requestError) {\r\n                props.setProperError(requestError);\r\n            });\r\n    }, [setOrganizations, setCoordinates, props]);\r\n\r\n    const deleteWorker = useCallback(() => {\r\n        setSubmitting(true);\r\n        axios.delete('/workers/' + worker.id)\r\n            .then(function (response) {\r\n                props.handleClose();\r\n                setSubmitting(false);\r\n            })\r\n            .catch(function (requestError) {\r\n                props.setProperError(requestError);\r\n                setSubmitting(false);\r\n            })\r\n    }, [worker, props])\r\n\r\n    const validateWorkerOnSubmit = useCallback(() => {\r\n        var newErrors = {};\r\n        if (!worker.name || worker.name.length === 0) {\r\n            newErrors['Name'] = 'Name should not be empty';\r\n        }\r\n        if (!worker.salary || worker.salary < 0) {\r\n            newErrors['Salary'] = 'Salary should be positive';\r\n        }\r\n        if (!worker.position) {\r\n            newErrors['Position'] = 'Position should be initialized';\r\n        }\r\n        if (!worker.startDate) {\r\n            newErrors['StartDate'] = 'Start date should be initialized';\r\n        }\r\n        if (!worker.coordinates) {\r\n            newErrors['Coordinates'] = 'Coordinates should be initialized';\r\n        }\r\n\r\n        if (Object.keys(newErrors).length === 0) {\r\n            var workerDto = {\r\n                name: worker.name,\r\n                salary: worker.salary,\r\n                position: worker.position,\r\n                coordinatesId: worker.coordinates.id,\r\n                startDate: worker.startDate.format('YYYY-MM-DDTHH:mm:ss'),\r\n            };\r\n            if (worker.organization) {\r\n                workerDto.organizationId = worker.organization.id;\r\n            }\r\n            if (worker.endDate) {\r\n                workerDto.endDate = worker.endDate;\r\n            }\r\n            setSubmitting(true);\r\n            axios.put('/workers/' + worker.id, workerDto)\r\n                .then(function (response) {\r\n                    props.handleClose();\r\n                    setSubmitting(false);\r\n                })\r\n                .catch(function (requestError) {\r\n                    props.setProperError(requestError);\r\n                    setSubmitting(false);\r\n                });\r\n        }\r\n\r\n        setErrors(newErrors);\r\n    }, [worker, props, setSubmitting])\r\n\r\n    return (\r\n        <div>\r\n            <Dialog open={props.open} onClose={props.handleClose} maxWidth='xl'>\r\n                <DialogTitle>Update worker</DialogTitle>\r\n                <DialogContent>\r\n                    <Box display=\"grid\" gap={2} sx={{\r\n                        backgroundImage: `linear-gradient(rgba(255,255,255,0.9), rgba(255,255,255,0.9)), url(${workerImg})`,\r\n                        backgroundSize: 'contain',\r\n                        backgroundPosition: 'center'\r\n                    }}>\r\n                        <Typography>\r\n              <pre style={{fontFamily: 'inherit'}}>\r\n                {`public class Worker {\r\n    private int id; //Значение поля должно быть больше 0, Значение этого поля должно быть уникальным, Значение этого поля должно генерироваться автоматически\r\n    private String name; //Поле не может быть null, Строка не может быть пустой\r\n    private Coordinates coordinates; //Поле не может быть null\r\n    private java.time.LocalDateTime creationDate; //Поле не может быть null, Значение этого поля должно генерироваться автоматически\r\n    private float salary; //Значение поля должно быть больше 0\r\n    private java.time.LocalDateTime startDate; //Поле не может быть null\r\n    private java.time.ZonedDateTime endDate; //Поле может быть null\r\n    private Position position; //Поле не может быть null\r\n    private Organization organization; //Поле может быть null\r\n}`}\r\n              </pre>\r\n                        </Typography>\r\n                        <Typography>\r\n                            <b>Please, fill the fields according to the description to create new worker entity.</b>\r\n                        </Typography>\r\n                        {\r\n                            coordinates.length > 0 && organizations.length > 0 ? <Box display=\"grid\" gap={2}>\r\n                                <TextField size='small' label='Name' value={worker.name} onChange={(e) => {\r\n                                    worker.name = e.target.value;\r\n                                    setWorker(Object.assign({}, worker));\r\n                                }} {...(errors['Name'] && {error: true, helperText: errors['Name']})}/>\r\n                                <TextField size='small' label='Salary' value={worker.salary} onChange={(e) => {\r\n                                    worker.salary = e.target.value;\r\n                                    setWorker(Object.assign({}, worker));\r\n                                }} {...(errors['Salary'] && {error: true, helperText: errors['Salary']})}/>\r\n                                <Autocomplete value={worker.position} onChange={(e, value) => {\r\n                                    worker.position = value;\r\n                                    setWorker(Object.assign({}, worker));\r\n                                }} options={positions} renderInput={(params) => <TextField {...params} label='Position'\r\n                                                                                           size='small' {...(errors['Position'] && {\r\n                                    error: true,\r\n                                    helperText: errors['Position']\r\n                                })}/>}/>\r\n                                <Autocomplete value={worker.coordinates} onChange={(e, value) => {\r\n                                    worker.coordinates = value;\r\n                                    setWorker(Object.assign({}, worker));\r\n                                }} options={coordinates} getOptionLabel={(option) => {\r\n                                    return JSON.stringify(option)\r\n                                }} renderInput={(params) => <TextField {...params} label='Coordinates'\r\n                                                                       size='small' {...(errors['Coordinates'] && {\r\n                                    error: true,\r\n                                    helperText: errors['Coordinates']\r\n                                })}/>}/>\r\n                                <Autocomplete value={worker.organization} onChange={(e, value) => {\r\n                                    worker.organization = value;\r\n                                    setWorker(Object.assign({}, worker));\r\n                                }} options={organizations} getOptionLabel={(option) => {\r\n                                    return option.fullName + '_' + option.id\r\n                                }} renderInput={(params) => <TextField {...params} label='Organization'\r\n                                                                       size='small'/>}/>\r\n                                <DateTimePicker\r\n                                    renderInput={(props) => <TextField {...props}\r\n                                                                       size='small' {...(errors['StartDate'] && {\r\n                                        error: true,\r\n                                        helperText: errors['StartDate']\r\n                                    })}/>}\r\n                                    label=\"Start date\"\r\n                                    value={worker.startDate}\r\n                                    onChange={(newValue) => {\r\n                                        worker.startDate = newValue;\r\n                                        setWorker(Object.assign({}, worker));\r\n                                    }}\r\n                                />\r\n                                <DateTimePicker\r\n                                    renderInput={(props) => <TextField {...props} size='small'/>}\r\n                                    label=\"End date\"\r\n                                    value={worker.endDate}\r\n                                    onChange={(newValue) => {\r\n                                        worker.endDate = newValue;\r\n                                        setWorker(Object.assign({}, worker));\r\n                                    }}\r\n                                />\r\n                            </Box> : ''\r\n                        }\r\n                    </Box>\r\n                </DialogContent>\r\n                {\r\n                    submitting ? <DialogActions>\r\n                        <LoadingButton color='secondary'>Cancel</LoadingButton>\r\n                        <LoadingButton>Update</LoadingButton>\r\n                    </DialogActions> : <DialogActions>\r\n                        <Button onClick={() => {\r\n                            setWorker({position: null, startDate: null, endDate: null});\r\n                            props.handleClose()\r\n                        }} variant='contained' color='secondary'>Cancel</Button>\r\n                        <Button onClick={() => {\r\n                            deleteWorker();\r\n                        }} color='error'>Delete</Button>\r\n                        <Button onClick={() => {\r\n                            validateWorkerOnSubmit();\r\n                        }}>Update</Button>\r\n                    </DialogActions>\r\n                }\r\n            </Dialog>\r\n        </div>\r\n    );\r\n}","import NumberFormat from 'react-number-format';\r\nimport * as React from 'react';\r\nimport TextField from '@mui/material/TextField';\r\n\r\nconst NumberFormatCustom = React.forwardRef(function NumberFormatCustom(props) {\r\n    const {onChange, ...other} = props;\r\n\r\n    return (\r\n        <NumberFormat\r\n            {...other}\r\n            onValueChange={(values) => {\r\n                onChange({\r\n                    target: {\r\n                        name: props.name,\r\n                        value: values.value,\r\n                    },\r\n                });\r\n            }}\r\n            isNumericString\r\n        />\r\n    );\r\n});\r\n\r\nexport default function NumberInput(props) {\r\n    return (\r\n        <TextField\r\n            label={props.label}\r\n            placeholder={props.placeholder}\r\n            value={props.value}\r\n            onChange={props.onChange}\r\n            error={props.error}\r\n            helperText={props.helperText}\r\n            id={\"formatted-numberformat-input-\" + props.label}\r\n            InputProps={{\r\n                inputComponent: NumberFormatCustom,\r\n            }}\r\n            variant=\"standard\"\r\n        />\r\n    );\r\n}","import React, {useCallback, useEffect, useState} from \"react\";\r\nimport {Box, Button, Grid, Typography} from '@mui/material';\r\nimport {DataGrid} from '@mui/x-data-grid';\r\nimport WorkerFilterCollection from './WorkerFilterCollection.js';\r\nimport CreateWorkerDialog from './CreateWorkerDialog.js';\r\nimport EditWorkerDialog from './EditWorkerDialog.js';\r\nimport NumberInput from '../NumberInput.js';\r\nimport {useSnackbar} from 'notistack';\r\n\r\nexport default function WorkerTabPanel() {\r\n    const {enqueueSnackbar} = useSnackbar();\r\n    const axios = require('axios').default;\r\n\r\n    const [openCreateWorkerDialog, setOpenCreateWorkerDialog] = useState(false);\r\n    const [isSalaryLoaded, setIsSalaryLoaded] = useState(false);\r\n    const [isGridLoaded, setIsGridLoaded] = useState(false);\r\n    const [isTotalLoaded, setIsTotalLoaded] = useState(false);\r\n    const [items, setItems] = useState([]);\r\n    const [selectedItem, setSelectedItem] = useState(null);\r\n    const [salarySum, setSalarySum] = useState(0);\r\n    const [displayedNow, setDisplayedNow] = useState(0);\r\n    const [totalForFilter, setTotalForFilter] = useState(0);\r\n    const [page, setPage] = useState(null);\r\n    const [pageSize, setPageSize] = useState(null);\r\n    const [filterCombination, setFilterCombination] = useState([]);\r\n    const [sortOrder, setSortOrder] = useState({field: 'id', order: 'ASC'});\r\n\r\n    const updateSelectedItem = useCallback((selectionModel: GridSelectionModel, details: GridCallbackDetails) => {\r\n        const newSelected = items.find(function (e) {\r\n            return e.id === selectionModel[0]\r\n        })\r\n        setSelectedItem(newSelected)\r\n    }, [items, setSelectedItem])\r\n\r\n    const setProperError = useCallback((requestError) => {\r\n        var newError = requestError;\r\n        if (requestError) {\r\n            if (requestError.response) {\r\n                newError = requestError.response.data.Message;\r\n            } else if (requestError.request) {\r\n                newError = requestError.request\r\n            } else {\r\n                newError = requestError.message;\r\n            }\r\n            enqueueSnackbar(newError, {variant: 'error'});\r\n        }\r\n    }, [enqueueSnackbar]);\r\n\r\n    const updateDataGrid = useCallback(() => {\r\n        axios.get('/workers/salary/sum').then(function (response) {\r\n            console.log(response.data);\r\n            setSalarySum(response.data);\r\n            setIsSalaryLoaded(true);\r\n        })\r\n            .catch(function (requestError) {\r\n                setProperError(requestError);\r\n                setIsSalaryLoaded(true);\r\n            });\r\n\r\n        axios.get('/workers/count')\r\n            .then(function (response) {\r\n                console.log(response.data);\r\n                setTotalForFilter(response.data);\r\n                setIsTotalLoaded(true);\r\n            })\r\n            .catch(function (requestError) {\r\n                setProperError(requestError);\r\n                setIsTotalLoaded(true);\r\n            });\r\n\r\n        return axios.get('/workers', {\r\n            params: {\r\n                page: page,\r\n                pageSize: pageSize,\r\n                sort: JSON.stringify({type: sortOrder.order, fieldName: sortOrder.field})\r\n            }\r\n        })\r\n            .then(function (response) {\r\n                console.log(response.data);\r\n                var newData = response.data.map(function (current) {\r\n                    var newCurrent = current;\r\n                    newCurrent.organization = JSON.stringify(current.organization, null, '\\t');\r\n                    newCurrent.coordinates = JSON.stringify(current.coordinates, null, '\\t');\r\n\r\n                    return newCurrent;\r\n                });\r\n                setItems(newData);\r\n                setDisplayedNow(newData.length);\r\n                setIsGridLoaded(true);\r\n                setProperError(null);\r\n            })\r\n            .catch(function (requestError) {\r\n                setProperError(requestError);\r\n                setIsGridLoaded(true);\r\n            });\r\n    }, [axios, setProperError, page, pageSize, sortOrder, setSalarySum, setTotalForFilter]);\r\n\r\n    const updateDataGridWithFilter = useCallback(() => {\r\n        var params = filterCombination.map((filter) => {\r\n            return {fieldName: filter.field, predicateType: filter.predicate, fieldValue: filter.value};\r\n        });\r\n\r\n        axios.get('/workers/salary/sum').then(function (response) {\r\n            console.log(response.data);\r\n            setSalarySum(response.data);\r\n            setIsSalaryLoaded(true);\r\n        })\r\n            .catch(function (requestError) {\r\n                setProperError(requestError);\r\n                setIsSalaryLoaded(true);\r\n            });\r\n\r\n        axios.get('/workers/count')\r\n            .then(function (response) {\r\n                console.log(response.data);\r\n                setTotalForFilter(response.data);\r\n                setIsTotalLoaded(true);\r\n            })\r\n            .catch(function (requestError) {\r\n                setProperError(requestError);\r\n                setIsTotalLoaded(true);\r\n            });\r\n\r\n        return axios({\r\n            method: 'get',\r\n            url: '/workers',\r\n            responseType: 'json',\r\n            params: {\r\n                filters: JSON.stringify(params),\r\n                page: page,\r\n                pageSize: pageSize,\r\n                sort: JSON.stringify({type: sortOrder.order, fieldName: sortOrder.field})\r\n            }\r\n        }).then(function (response) {\r\n            console.log(response.data);\r\n            var newData = response.data.map(function (current) {\r\n                var newCurrent = current;\r\n                newCurrent.organization = JSON.stringify(current.organization, null, '\\t');\r\n                newCurrent.coordinates = JSON.stringify(current.coordinates, null, '\\t');\r\n\r\n                return newCurrent;\r\n            });\r\n            setItems(newData);\r\n            setDisplayedNow(newData.length);\r\n            setIsGridLoaded(true);\r\n            setProperError(null);\r\n        })\r\n            .catch(function (requestError) {\r\n                setProperError(requestError);\r\n                setIsGridLoaded(true);\r\n            });\r\n    }, [axios, filterCombination, setProperError, pageSize, page, sortOrder, setSalarySum, setTotalForFilter]);\r\n\r\n    useEffect(() => {\r\n        if (items.length === 0) {\r\n            updateDataGrid();\r\n        }\r\n\r\n        axios.get('/workers/salary/sum').then(function (response) {\r\n            console.log(response.data);\r\n            setSalarySum(response.data);\r\n            setIsSalaryLoaded(true);\r\n        })\r\n            .catch(function (requestError) {\r\n                setProperError(requestError);\r\n                setIsSalaryLoaded(true);\r\n            });\r\n\r\n        axios.get('/workers/count')\r\n            .then(function (response) {\r\n                console.log(response.data);\r\n                setTotalForFilter(response.data);\r\n                setIsTotalLoaded(true);\r\n            })\r\n            .catch(function (requestError) {\r\n                setProperError(requestError);\r\n                setIsTotalLoaded(true);\r\n            });\r\n    }, [])\r\n\r\n    const columns: GridColDef[] = [\r\n        {field: 'id', headerName: 'Id', width: 50, sortable: false},\r\n        {field: 'name', headerName: 'Name', width: 150, sortable: false},\r\n        {field: 'position', headerName: 'Position', width: 150, sortable: false},\r\n        {field: 'salary', headerName: 'Salary', width: 150, sortable: false},\r\n        {field: 'coordinates', headerName: 'Coordinates', width: 250, sortable: false},\r\n        {field: 'organization', headerName: 'Organization', width: 400, sortable: false},\r\n        {field: 'creationDate', headerName: 'Created at', width: 220, sortable: false},\r\n        {field: 'startDate', headerName: 'Started at', width: 200, sortable: false},\r\n        {field: 'endDate', headerName: 'Ended at', width: 350, sortable: false},\r\n    ];\r\n\r\n    if (isGridLoaded || isSalaryLoaded || isTotalLoaded) {\r\n        return <Grid container spacing={4}>\r\n            <Grid item xl={8}>\r\n                {\r\n                    isGridLoaded ?\r\n                        <div>\r\n                            <Box sx={{height: Math.max(Math.min(56 * (displayedNow + 1), 1000), 620) + 'px'}}>\r\n                                <DataGrid disableColumnFilter rows={items} columns={columns} hideFooter={true}\r\n                                          onSelectionModelChange={updateSelectedItem}/>\r\n                            </Box>\r\n                            <Typography sx={{mb: 2}}>Displayed: {displayedNow}</Typography>\r\n                            <NumberInput size='small' label='Page' placeholder='0' value={page} onChange={(e) => {\r\n                                setPage(e.target.value)\r\n                            }}/>\r\n                            <NumberInput size='small' label='Page size' placeholder='10' value={pageSize}\r\n                                         onChange={(e) => {\r\n                                             setPageSize(e.target.value)\r\n                                         }}/>\r\n                        </div> :\r\n                        <Box sx={{height: '100%', width: '50%'}}>\r\n                            Grid is loading...\r\n                        </Box>\r\n                }\r\n                <Box sx={{mt: 1, mb: 2}}>\r\n                    {\r\n                        isTotalLoaded ?\r\n                            <Typography>Total: {totalForFilter}</Typography> :\r\n                            <Typography>Total: Loading...</Typography>\r\n                    }\r\n                    {\r\n                        isSalaryLoaded ?\r\n                            <Typography>Salary sum: {salarySum}</Typography> :\r\n                            <Typography>Salary sum: Loading</Typography>\r\n                    }\r\n                </Box>\r\n                <Button variant=\"contained\" onClick={() => {\r\n                    setOpenCreateWorkerDialog(true)\r\n                }}>Add element</Button>\r\n            </Grid>\r\n            <Grid item xl={4}>\r\n                <Box sx={{height: '100%', width: '50%'}}>\r\n                    <WorkerFilterCollection filters={filterCombination} updateFilters={setFilterCombination}\r\n                                            sortOrder={sortOrder} setSortOrder={setSortOrder}/>\r\n                    <Button sx={{mt: 3}} variant=\"contained\" onClick={updateDataGridWithFilter}>Apply filter</Button>\r\n                </Box>\r\n            </Grid>\r\n            {openCreateWorkerDialog ? <CreateWorkerDialog open={openCreateWorkerDialog} handleClose={() => {\r\n                    setOpenCreateWorkerDialog(false);\r\n                    updateDataGrid()\r\n                }} setProperError={setProperError}/>\r\n                : ''}\r\n            {selectedItem ? <EditWorkerDialog open={selectedItem} handleClose={() => {\r\n                    setSelectedItem(null);\r\n                    updateDataGrid()\r\n                }} item={selectedItem} setProperError={setProperError}/>\r\n                : ''}\r\n        </Grid>\r\n    } else {\r\n        return <Box sx={{height: '100%', width: '50%'}}>\r\n            Loading...\r\n        </Box>\r\n    }\r\n\r\n\r\n}","import React, {useState} from \"react\";\r\nimport {Autocomplete, Box, Button, TextField, Typography} from '@mui/material';\r\n\r\nexport default function OrganizationFilterCollection(props) {\r\n    function addNewFilter() {\r\n        props.updateFilters(props.filters.concat([{\r\n            field: filterField,\r\n            predicate: filterPredicate,\r\n            value: filterValue\r\n        }]));\r\n    }\r\n\r\n    function updateSortField(value) {\r\n        var newSort = {};\r\n        newSort.order = props.sortOrder.order;\r\n        newSort.field = value;\r\n        props.setSortOrder(newSort);\r\n    }\r\n\r\n    function updateSortOrder(value) {\r\n        var newSort = {};\r\n        newSort.field = props.sortOrder.field;\r\n        newSort.order = value;\r\n        props.setSortOrder(newSort);\r\n    }\r\n\r\n    const fieldOptions = ['id', 'fullName', 'annualTurnover'];\r\n    const predicateOptions = ['EQ', 'GT', 'LT', 'LIKE'];\r\n    const sortOptions = ['ASC', 'DESC'];\r\n\r\n    const [filterField, setFilterField] = useState(fieldOptions[0]);\r\n    const [filterPredicate, setFilterPredicate] = useState(predicateOptions[0]);\r\n    const [filterValue, setFilterValue] = useState('');\r\n    return <Box display=\"grid\" gap={2}>\r\n        <Autocomplete size='small' value={filterField} onChange={(e, value) => {\r\n            setFilterField(value);\r\n        }} options={fieldOptions} renderInput={(params) => <TextField {...params} label=\"Field name\"/>}/>\r\n        <Autocomplete size='small' value={filterPredicate} onChange={(e, value) => {\r\n            setFilterPredicate(value);\r\n        }} options={predicateOptions} renderInput={(params) => <TextField {...params} label=\"Predicate\"/>}/>\r\n        <TextField size='small' label={filterField + ' value'} value={filterValue} onChange={(e) => {\r\n            setFilterValue(e.target.value);\r\n        }}/>\r\n        <Button variant=\"contained\" onClick={addNewFilter}>Add filter</Button>\r\n        <Button variant=\"contained\" color=\"secondary\" onClick={() => {\r\n            props.updateFilters([])\r\n        }}>Drop Filters</Button>\r\n        <Autocomplete size='small' value={props.sortOrder.field} onChange={(e, value) => {\r\n            updateSortField(value);\r\n        }} options={fieldOptions} renderInput={(params) => <TextField {...params} label=\"Sort field\"/>}/>\r\n        <Autocomplete size='small' value={props.sortOrder.order} onChange={(e, value) => {\r\n            updateSortOrder(value);\r\n        }} options={sortOptions} renderInput={(params) => <TextField {...params} label=\"Sort order\"/>}/>\r\n        {props.filters.map((filter, i) => {\r\n            return (<Typography key={'Typo_' + i}>{filter.field} {filter.predicate} {filter.value}</Typography>)\r\n        })}\r\n    </Box>\r\n}\r\n","export default __webpack_public_path__ + \"static/media/team.a095f2aa.jpg\";","import React, {useCallback, useState} from \"react\";\r\nimport {Box, Button, Dialog, DialogActions, DialogContent, DialogTitle, TextField, Typography} from '@mui/material';\r\nimport {LoadingButton} from '@mui/lab';\r\nimport axios from 'axios'\r\nimport teamImg from './team.jpg';\r\nimport NumberInput from '../NumberInput.js';\r\n\r\nexport default function CreateOrganizationDialog(props) {\r\n    const [organization, setOrganization] = useState({fullName: null, annualTurnover: 0});\r\n    const [errors, setErrors] = useState({});\r\n    const [submitting, setSubmitting] = useState(false);\r\n\r\n    const validateOrganizationOnSubmit = useCallback(() => {\r\n        var newErrors = {};\r\n        if (!organization.fullName || organization.fullName.length === 0) {\r\n            newErrors['FullName'] = 'Full Name should not be empty';\r\n        }\r\n        if (!organization.annualTurnover || organization.annualTurnover <= 0) {\r\n            newErrors['AnnualTurnover'] = 'Annual turnover should be positive';\r\n        }\r\n\r\n        if (Object.keys(newErrors).length === 0) {\r\n            var organizationDto = {\r\n                fullName: organization.fullName,\r\n                annualTurnover: organization.annualTurnover,\r\n            };\r\n\r\n            setSubmitting(true);\r\n            axios.post('/organizations', organizationDto)\r\n                .then(function (response) {\r\n                    props.handleClose();\r\n                    setSubmitting(false);\r\n                })\r\n                .catch(function (requestError) {\r\n                    props.setProperError(requestError);\r\n                    setSubmitting(false);\r\n                });\r\n        }\r\n\r\n        setErrors(newErrors);\r\n    }, [organization, props, setSubmitting])\r\n\r\n    return (\r\n        <div>\r\n            <Dialog open={props.open} onClose={props.handleClose} maxWidth='xl'>\r\n                <DialogTitle>Create organization</DialogTitle>\r\n                <DialogContent>\r\n                    <Box display=\"grid\" gap={2} sx={{\r\n                        backgroundImage: `linear-gradient(rgba(255,255,255,0.9), rgba(255,255,255,0.9)), url(${teamImg})`,\r\n                        backgroundSize: 'contain',\r\n                        backgroundPosition: 'center'\r\n                    }}>\r\n                        <Typography>\r\n              <pre style={{fontFamily: 'inherit'}}>\r\n                {`public class Organization {\r\n    private String fullName; //Поле не может быть null\r\n    private int annualTurnover; //Значение поля должно быть больше 0\r\n}`}\r\n              </pre>\r\n                        </Typography>\r\n                        <Typography>\r\n                            <b>Please, fill the fields according to the description to create new organization\r\n                                entity.</b>\r\n                        </Typography>\r\n                        <Box display=\"grid\" gap={2}>\r\n                            <TextField size='small' label='FullName' value={organization.fullName} onChange={(e) => {\r\n                                organization.fullName = e.target.value;\r\n                                setOrganization(Object.assign({}, organization));\r\n                            }} {...(errors['FullName'] && {error: true, helperText: errors['FullName']})}/>\r\n                            <NumberInput size='small' label='Annual Turnover' value={organization.annualTurnover}\r\n                                         onChange={(e) => {\r\n                                             organization.annualTurnover = e.target.value;\r\n                                             setOrganization(Object.assign({}, organization));\r\n                                         }} {...(errors['AnnualTurnover'] && {\r\n                                error: true,\r\n                                helperText: errors['AnnualTurnover']\r\n                            })}/>\r\n                        </Box>\r\n                    </Box>\r\n                </DialogContent>\r\n                {\r\n                    submitting ? <DialogActions>\r\n                        <LoadingButton color='secondary'>Cancel</LoadingButton>\r\n                        <LoadingButton>Create</LoadingButton>\r\n                    </DialogActions> : <DialogActions>\r\n                        <Button onClick={() => {\r\n                            setOrganization({position: null, startDate: null, endDate: null});\r\n                            props.handleClose()\r\n                        }} color='secondary'>Cancel</Button>\r\n                        <Button onClick={() => {\r\n                            validateOrganizationOnSubmit();\r\n                        }}>Create</Button>\r\n                    </DialogActions>\r\n                }\r\n            </Dialog>\r\n        </div>\r\n    );\r\n}","import React, {useCallback, useState} from \"react\";\r\nimport {Box, Button, Dialog, DialogActions, DialogContent, DialogTitle, TextField, Typography} from '@mui/material';\r\nimport {LoadingButton} from '@mui/lab';\r\nimport axios from 'axios'\r\nimport NumberInput from '../NumberInput.js';\r\nimport teamImg from './team.jpg';\r\n\r\nexport default function EditOrganizationDialog(props) {\r\n    const [organization, setOrganization] = useState({\r\n        fullName: props.item.fullName,\r\n        annualTurnover: props.item.annualTurnover,\r\n        id: props.item.id\r\n    });\r\n    const [errors, setErrors] = useState({});\r\n    const [submitting, setSubmitting] = useState(false);\r\n\r\n    const deleteOrganization = useCallback(() => {\r\n        setSubmitting(true);\r\n        axios.delete('/organizations/' + organization.id)\r\n            .then(function (response) {\r\n                props.handleClose();\r\n                setSubmitting(false);\r\n            })\r\n            .catch(function (requestError) {\r\n                props.setProperError(requestError);\r\n                setSubmitting(false);\r\n            })\r\n    }, [organization, props])\r\n\r\n    const validateOrganizationOnSubmit = useCallback(() => {\r\n        var newErrors = {};\r\n        if (!organization.fullName || organization.fullName.length === 0) {\r\n            newErrors['FullName'] = 'Full Name should not be empty';\r\n        }\r\n        if (!organization.annualTurnover || organization.annualTurnover <= 0) {\r\n            newErrors['AnnualTurnover'] = 'Annual turnover should be positive';\r\n        }\r\n\r\n        if (Object.keys(newErrors).length === 0) {\r\n            var organizationDto = {\r\n                fullName: organization.fullName,\r\n                annualTurnover: organization.annualTurnover,\r\n            };\r\n\r\n            setSubmitting(true);\r\n            axios.put('/organizations/' + organization.id, organizationDto)\r\n                .then(function (response) {\r\n                    props.handleClose();\r\n                    setSubmitting(false);\r\n                })\r\n                .catch(function (requestError) {\r\n                    props.setProperError(requestError);\r\n                    setSubmitting(false);\r\n                });\r\n        }\r\n\r\n        setErrors(newErrors);\r\n    }, [organization, props, setSubmitting])\r\n\r\n    return (\r\n        <div>\r\n            <Dialog open={props.open} onClose={props.handleClose} maxWidth='xl'>\r\n                <DialogTitle>Update worker</DialogTitle>\r\n                <DialogContent>\r\n                    <Box display=\"grid\" gap={2} sx={{\r\n                        backgroundImage: `linear-gradient(rgba(255,255,255,0.9), rgba(255,255,255,0.9)), url(${teamImg})`,\r\n                        backgroundSize: 'contain',\r\n                        backgroundPosition: 'center'\r\n                    }}>\r\n                        <Typography>\r\n              <pre style={{fontFamily: 'inherit'}}>\r\n                {`public class Organization {\r\n    private String fullName; //Поле не может быть null\r\n    private int annualTurnover; //Значение поля должно быть больше 0\r\n}`}\r\n              </pre>\r\n                        </Typography>\r\n                        <Typography>\r\n                            <b>Please, fill the fields according to the description to create new organization\r\n                                entity.</b>\r\n                        </Typography>\r\n                        <Box display=\"grid\" gap={2}>\r\n                            <TextField size='small' label='FullName' value={organization.fullName} onChange={(e) => {\r\n                                organization.fullName = e.target.value;\r\n                                setOrganization(Object.assign({}, organization));\r\n                            }} {...(errors['FullName'] && {error: true, helperText: errors['FullName']})}/>\r\n                            <NumberInput size='small' label='Annual Turnover' value={organization.annualTurnover}\r\n                                         onChange={(e) => {\r\n                                             organization.annualTurnover = e.target.value;\r\n                                             setOrganization(Object.assign({}, organization));\r\n                                         }} {...(errors['AnnualTurnover'] && {\r\n                                error: true,\r\n                                helperText: errors['AnnualTurnover']\r\n                            })}/>\r\n                        </Box>\r\n                    </Box>\r\n                </DialogContent>\r\n                {\r\n                    submitting ? <DialogActions>\r\n                        <LoadingButton color='secondary'>Cancel</LoadingButton>\r\n                        <LoadingButton>Update</LoadingButton>\r\n                    </DialogActions> : <DialogActions>\r\n                        <Button onClick={() => {\r\n                            setOrganization({position: null, startDate: null, endDate: null});\r\n                            props.handleClose()\r\n                        }} variant='contained' color='secondary'>Cancel</Button>\r\n                        <Button onClick={() => {\r\n                            deleteOrganization();\r\n                        }} color='error'>Delete</Button>\r\n                        <Button onClick={() => {\r\n                            validateOrganizationOnSubmit();\r\n                        }}>Update</Button>\r\n                    </DialogActions>\r\n                }\r\n            </Dialog>\r\n        </div>\r\n    );\r\n}","import React, {useCallback, useEffect, useState} from \"react\";\r\nimport {Box, Button, Grid, Typography} from '@mui/material';\r\nimport {DataGrid} from '@mui/x-data-grid';\r\nimport OrganizationFilterCollection from './OrganizationFilterCollection.js';\r\nimport CreateOrganizationDialog from './CreateOrganizationDialog.js';\r\nimport EditOrganizationDialog from './EditOrganizationDialog.js';\r\nimport NumberInput from '../NumberInput.js';\r\nimport {useSnackbar} from 'notistack';\r\n\r\nexport default function OrganizationTabPanel() {\r\n    const {enqueueSnackbar} = useSnackbar();\r\n    const axios = require('axios').default;\r\n\r\n    const [openCreateWorkerDialog, setOpenCreateWorkerDialog] = useState(false);\r\n    const [isGridLoaded, setIsGridLoaded] = useState(false);\r\n    const [isTotalLoaded, setIsTotalLoaded] = useState(false);\r\n    const [items, setItems] = useState([]);\r\n    const [selectedItem, setSelectedItem] = useState(null);\r\n    const [displayedNow, setDisplayedNow] = useState(0);\r\n    const [totalForFilter, setTotalForFilter] = useState(0);\r\n    const [page, setPage] = useState(null);\r\n    const [pageSize, setPageSize] = useState(null);\r\n    const [filterCombination, setFilterCombination] = useState([]);\r\n    const [sortOrder, setSortOrder] = useState({field: 'id', order: 'ASC'});\r\n\r\n    const updateSelectedItem = useCallback((selectionModel: GridSelectionModel, details: GridCallbackDetails) => {\r\n        const newSelected = items.find(function (e) {\r\n            return e.id === selectionModel[0]\r\n        })\r\n        setSelectedItem(newSelected)\r\n    }, [items, setSelectedItem])\r\n\r\n    const setProperError = useCallback((requestError) => {\r\n        var newError = requestError;\r\n        if (requestError) {\r\n            if (requestError.response) {\r\n                newError = requestError.response.data.Message;\r\n            } else if (requestError.request) {\r\n                newError = requestError.request\r\n            } else {\r\n                newError = requestError.message;\r\n            }\r\n            enqueueSnackbar(newError, {variant: 'error'});\r\n        }\r\n    }, [enqueueSnackbar]);\r\n\r\n    const updateDataGrid = useCallback(() => {\r\n        return axios.get('/organizations', {\r\n            params: {\r\n                page: page,\r\n                pageSize: pageSize,\r\n                sort: JSON.stringify({type: sortOrder.order, fieldName: sortOrder.field})\r\n            }\r\n        })\r\n            .then(function (response) {\r\n                console.log(response.data);\r\n                var newData = response.data.map(function (current) {\r\n                    var newCurrent = current;\r\n                    newCurrent.organization = JSON.stringify(current.organization, null, '\\t');\r\n                    newCurrent.coordinates = JSON.stringify(current.coordinates, null, '\\t');\r\n\r\n                    return newCurrent;\r\n                });\r\n                setItems(newData);\r\n                setDisplayedNow(newData.length);\r\n                setIsGridLoaded(true);\r\n                setProperError(null);\r\n            })\r\n            .catch(function (requestError) {\r\n                setProperError(requestError);\r\n                setIsGridLoaded(true);\r\n            });\r\n    }, [axios, setProperError, page, pageSize, sortOrder]);\r\n\r\n    const updateDataGridWithFilter = useCallback(() => {\r\n        var params = filterCombination.map((filter) => {\r\n            return {fieldName: filter.field, predicateType: filter.predicate, fieldValue: filter.value};\r\n        });\r\n\r\n        axios.get('/organizations/count')\r\n            .then(function (response) {\r\n                console.log(response.data);\r\n                setTotalForFilter(response.data);\r\n                setIsTotalLoaded(true);\r\n            })\r\n            .catch(function (requestError) {\r\n                setProperError(requestError);\r\n                setIsTotalLoaded(true);\r\n            });\r\n\r\n        return axios({\r\n            method: 'get',\r\n            url: '/organizations',\r\n            responseType: 'json',\r\n            params: {\r\n                filters: JSON.stringify(params),\r\n                page: page,\r\n                pageSize: pageSize,\r\n                sort: JSON.stringify({type: sortOrder.order, fieldName: sortOrder.field})\r\n            }\r\n        }).then(function (response) {\r\n            console.log(response.data);\r\n            var newData = response.data.map(function (current) {\r\n                var newCurrent = current;\r\n                newCurrent.organization = JSON.stringify(current.organization, null, '\\t');\r\n                newCurrent.coordinates = JSON.stringify(current.coordinates, null, '\\t');\r\n\r\n                return newCurrent;\r\n            });\r\n            setItems(newData);\r\n            setDisplayedNow(newData.length);\r\n            setIsGridLoaded(true);\r\n            setProperError(null);\r\n        })\r\n            .catch(function (requestError) {\r\n                setProperError(requestError);\r\n                setIsGridLoaded(true);\r\n            });\r\n    }, [axios, filterCombination, setProperError, pageSize, page, sortOrder]);\r\n\r\n    useEffect(() => {\r\n        if (items.length === 0) {\r\n            updateDataGrid();\r\n        }\r\n\r\n        axios.get('/organizations/count')\r\n            .then(function (response) {\r\n                console.log(response.data);\r\n                setTotalForFilter(response.data);\r\n                setIsTotalLoaded(true);\r\n            })\r\n            .catch(function (requestError) {\r\n                setProperError(requestError);\r\n                setIsTotalLoaded(true);\r\n            });\r\n    }, [])\r\n\r\n    const columns: GridColDef[] = [\r\n        {field: 'id', headerName: 'Id', width: 50, sortable: false},\r\n        {field: 'fullName', headerName: 'Full Name', width: 150, sortable: false},\r\n        {field: 'annualTurnover', headerName: 'Annual Turnover', width: 150, sortable: false},\r\n    ];\r\n\r\n    if (isGridLoaded || isTotalLoaded) {\r\n        return <Grid container spacing={4}>\r\n            <Grid item xl={8}>\r\n                {\r\n                    isGridLoaded ?\r\n                        <div>\r\n                            <Box sx={{height: Math.max(Math.min(56 * (displayedNow + 1), 1000), 620) + 'px'}}>\r\n                                <DataGrid disableColumnFilter rows={items} columns={columns} hideFooter={true}\r\n                                          onSelectionModelChange={updateSelectedItem}/>\r\n                            </Box>\r\n                            <Typography sx={{mb: 2}}>Displayed: {displayedNow}</Typography>\r\n                            <NumberInput size='small' label='Page' placeholder='0' value={page} onChange={(e) => {\r\n                                setPage(e.target.value)\r\n                            }}/>\r\n                            <NumberInput size='small' label='Page size' placeholder='10' value={pageSize}\r\n                                         onChange={(e) => {\r\n                                             setPageSize(e.target.value)\r\n                                         }}/>\r\n                        </div> :\r\n                        <Box sx={{height: '100%', width: '50%'}}>\r\n                            Grid is loading...\r\n                        </Box>\r\n                }\r\n                <Box sx={{mt: 1, mb: 2}}>\r\n                    {\r\n                        isTotalLoaded ?\r\n                            <Typography>Total: {totalForFilter}</Typography> :\r\n                            <Typography>Total: Loading...</Typography>\r\n                    }\r\n                </Box>\r\n                <Button variant=\"contained\" onClick={() => {\r\n                    setOpenCreateWorkerDialog(true)\r\n                }}>Add element</Button>\r\n            </Grid>\r\n            <Grid item xl={4}>\r\n                <Box sx={{height: '100%', width: '50%'}}>\r\n                    <OrganizationFilterCollection filters={filterCombination} updateFilters={setFilterCombination}\r\n                                                  sortOrder={sortOrder} setSortOrder={setSortOrder}/>\r\n                    <Button sx={{mt: 3}} variant=\"contained\" onClick={updateDataGridWithFilter}>Apply filter</Button>\r\n                </Box>\r\n            </Grid>\r\n            {openCreateWorkerDialog ? <CreateOrganizationDialog open={openCreateWorkerDialog} handleClose={() => {\r\n                    setOpenCreateWorkerDialog(false);\r\n                    updateDataGrid()\r\n                }} setProperError={setProperError}/>\r\n                : ''}\r\n            {selectedItem ? <EditOrganizationDialog open={selectedItem} handleClose={() => {\r\n                    setSelectedItem(null);\r\n                    updateDataGrid()\r\n                }} item={selectedItem} setProperError={setProperError}/>\r\n                : ''}\r\n        </Grid>\r\n    } else {\r\n        return <Box sx={{height: '100%', width: '50%'}}>\r\n            Loading...\r\n        </Box>\r\n    }\r\n\r\n\r\n}","import React, {useState} from \"react\";\r\nimport {Autocomplete, Box, Button, TextField, Typography} from '@mui/material';\r\n\r\nexport default function CoordinatesFilterCollection(props) {\r\n    function addNewFilter() {\r\n        props.updateFilters(props.filters.concat([{\r\n            field: filterField,\r\n            predicate: filterPredicate,\r\n            value: filterValue\r\n        }]));\r\n    }\r\n\r\n    function updateSortField(value) {\r\n        var newSort = {};\r\n        newSort.order = props.sortOrder.order;\r\n        newSort.field = value;\r\n        props.setSortOrder(newSort);\r\n    }\r\n\r\n    function updateSortOrder(value) {\r\n        var newSort = {};\r\n        newSort.field = props.sortOrder.field;\r\n        newSort.order = value;\r\n        props.setSortOrder(newSort);\r\n    }\r\n\r\n    const fieldOptions = ['id', 'x', 'y'];\r\n    const predicateOptions = ['EQ', 'GT', 'LT', 'LIKE'];\r\n    const sortOptions = ['ASC', 'DESC'];\r\n\r\n    const [filterField, setFilterField] = useState(fieldOptions[0]);\r\n    const [filterPredicate, setFilterPredicate] = useState(predicateOptions[0]);\r\n    const [filterValue, setFilterValue] = useState('');\r\n    return <Box display=\"grid\" gap={2}>\r\n        <Autocomplete size='small' value={filterField} onChange={(e, value) => {\r\n            setFilterField(value);\r\n        }} options={fieldOptions} renderInput={(params) => <TextField {...params} label=\"Field name\"/>}/>\r\n        <Autocomplete size='small' value={filterPredicate} onChange={(e, value) => {\r\n            setFilterPredicate(value);\r\n        }} options={predicateOptions} renderInput={(params) => <TextField {...params} label=\"Predicate\"/>}/>\r\n        <TextField size='small' label={filterField + ' value'} value={filterValue} onChange={(e) => {\r\n            setFilterValue(e.target.value);\r\n        }}/>\r\n        <Button variant=\"contained\" onClick={addNewFilter}>Add filter</Button>\r\n        <Button variant=\"contained\" color=\"secondary\" onClick={() => {\r\n            props.updateFilters([])\r\n        }}>Drop Filters</Button>\r\n        <Autocomplete size='small' value={props.sortOrder.field} onChange={(e, value) => {\r\n            updateSortField(value);\r\n        }} options={fieldOptions} renderInput={(params) => <TextField {...params} label=\"Sort field\"/>}/>\r\n        <Autocomplete size='small' value={props.sortOrder.order} onChange={(e, value) => {\r\n            updateSortOrder(value);\r\n        }} options={sortOptions} renderInput={(params) => <TextField {...params} label=\"Sort order\"/>}/>\r\n        {props.filters.map((filter, i) => {\r\n            return (<Typography key={'Typo_' + i}>{filter.field} {filter.predicate} {filter.value}</Typography>)\r\n        })}\r\n    </Box>\r\n}\r\n","export default __webpack_public_path__ + \"static/media/map.942eaf01.jpg\";","import React, {useCallback, useState} from \"react\"\r\nimport {Box, Button, Dialog, DialogActions, DialogContent, DialogTitle, Typography} from '@mui/material'\r\nimport {LoadingButton} from '@mui/lab'\r\nimport axios from 'axios'\r\nimport mapImg from './map.jpg'\r\nimport NumberInput from '../NumberInput.js'\r\n\r\nexport default function CreateCoordinatesDialog(props) {\r\n    const [coordinates, setCoordinates] = useState({x: null, y: null});\r\n    const [errors, setErrors] = useState({});\r\n    const [submitting, setSubmitting] = useState(false);\r\n\r\n    const validateCoordinatesOnSubmit = useCallback(() => {\r\n        var newErrors = {};\r\n        if (!coordinates.x || coordinates.x <= -485) {\r\n            newErrors['X'] = 'X should be bigger then -485';\r\n        }\r\n        if (!coordinates.y) {\r\n            newErrors['Y'] = 'Y should be given';\r\n        }\r\n\r\n        if (Object.keys(newErrors).length === 0) {\r\n            var coordinatesDto = {\r\n                x: coordinates.x,\r\n                y: coordinates.y,\r\n            };\r\n\r\n            setSubmitting(true);\r\n            axios.post('/coordinates', coordinatesDto)\r\n                .then(function (response) {\r\n                    props.handleClose();\r\n                    setSubmitting(false);\r\n                })\r\n                .catch(function (requestError) {\r\n                    props.setProperError(requestError);\r\n                    setSubmitting(false);\r\n                });\r\n        }\r\n\r\n        setErrors(newErrors);\r\n    }, [coordinates, props, setSubmitting])\r\n\r\n    return (\r\n        <div>\r\n            <Dialog open={props.open} onClose={props.handleClose} maxWidth='xl'>\r\n                <DialogTitle>Create coordinates</DialogTitle>\r\n                <DialogContent>\r\n                    <Box display=\"grid\" gap={2} sx={{\r\n                        backgroundImage: `linear-gradient(rgba(255,255,255,0.5), rgba(255,255,255,0.5)), url(${mapImg})`,\r\n                        backgroundSize: 'contain',\r\n                        backgroundPosition: 'center'\r\n                    }}>\r\n                        <Typography>\r\n              <pre style={{fontFamily: 'inherit'}}>\r\n                {`public class Coordinates {\r\n    private Integer x; //Значение поля должно быть больше -485, Поле не может быть null\r\n    private int y;\r\n}`}\r\n              </pre>\r\n                        </Typography>\r\n                        <Typography>\r\n                            <b>Please, fill the fields according to the description to create new coordinates\r\n                                entity.</b>\r\n                        </Typography>\r\n                        <Box display=\"grid\" gap={2}>\r\n                            <NumberInput size='small' label='X' value={coordinates.x} onChange={(e) => {\r\n                                coordinates.x = e.target.value;\r\n                                setCoordinates(Object.assign({}, coordinates));\r\n                            }} {...(errors['X'] && {error: true, helperText: errors['X']})}/>\r\n                            <NumberInput size='small' label='Y' value={coordinates.y} onChange={(e) => {\r\n                                coordinates.y = e.target.value;\r\n                                setCoordinates(Object.assign({}, coordinates));\r\n                            }} {...(errors['Y'] && {error: true, helperText: errors['Y']})}/>\r\n                        </Box>\r\n                    </Box>\r\n                </DialogContent>\r\n                {\r\n                    submitting ? <DialogActions>\r\n                        <LoadingButton color='secondary'>Cancel</LoadingButton>\r\n                        <LoadingButton>Create</LoadingButton>\r\n                    </DialogActions> : <DialogActions>\r\n                        <Button onClick={() => {\r\n                            setCoordinates({position: null, startDate: null, endDate: null});\r\n                            props.handleClose()\r\n                        }} color='secondary'>Cancel</Button>\r\n                        <Button onClick={() => {\r\n                            validateCoordinatesOnSubmit();\r\n                        }}>Create</Button>\r\n                    </DialogActions>\r\n                }\r\n            </Dialog>\r\n        </div>\r\n    );\r\n}","import React, {useCallback, useState} from \"react\"\r\nimport {Box, Button, Dialog, DialogActions, DialogContent, DialogTitle, Typography} from '@mui/material'\r\nimport {LoadingButton} from '@mui/lab'\r\nimport axios from 'axios'\r\nimport NumberInput from '../NumberInput.js'\r\nimport mapImg from './map.jpg'\r\n\r\nexport default function EditCoordinatesDialog(props) {\r\n    const [coordinates, setCoordinates] = useState({x: props.item.x, y: props.item.y, id: props.item.id});\r\n    const [errors, setErrors] = useState({});\r\n    const [submitting, setSubmitting] = useState(false);\r\n\r\n    const deleteOrganization = useCallback(() => {\r\n        setSubmitting(true);\r\n        axios.delete('/coordinates/' + coordinates.id)\r\n            .then(function (response) {\r\n                props.handleClose();\r\n                setSubmitting(false);\r\n            })\r\n            .catch(function (requestError) {\r\n                props.setProperError(requestError);\r\n                setSubmitting(false);\r\n            })\r\n    }, [coordinates, props])\r\n\r\n    const validateCoordinatesOnSubmit = useCallback(() => {\r\n        var newErrors = {};\r\n        if (!coordinates.x || coordinates.x <= -485) {\r\n            newErrors['X'] = 'X should be bigger then -485';\r\n        }\r\n        if (!coordinates.y) {\r\n            newErrors['Y'] = 'Y should be given';\r\n        }\r\n        console.log(JSON.stringify(newErrors))\r\n        if (Object.keys(newErrors).length === 0) {\r\n            var coordinatesDto = {\r\n                x: coordinates.x,\r\n                y: coordinates.y,\r\n            };\r\n\r\n            setSubmitting(true);\r\n            axios.put('/coordinates/' + coordinates.id, coordinatesDto)\r\n                .then(function (response) {\r\n                    props.handleClose();\r\n                    setSubmitting(false);\r\n                })\r\n                .catch(function (requestError) {\r\n                    props.setProperError(requestError);\r\n                    setSubmitting(false);\r\n                });\r\n        }\r\n\r\n        setErrors(newErrors);\r\n    }, [coordinates, props, setSubmitting])\r\n\r\n    return (\r\n        <div>\r\n            <Dialog open={props.open} onClose={props.handleClose} maxWidth='xl'>\r\n                <DialogTitle>Update worker</DialogTitle>\r\n                <DialogContent>\r\n                    <Box display=\"grid\" gap={2} sx={{\r\n                        backgroundImage: `linear-gradient(rgba(255,255,255,0.9), rgba(255,255,255,0.9)), url(${mapImg})`,\r\n                        backgroundSize: 'contain',\r\n                        backgroundPosition: 'center'\r\n                    }}>\r\n                        <Typography>\r\n              <pre style={{fontFamily: 'inherit'}}>\r\n                {`public class Coordinates {\r\n    private Integer x; //Значение поля должно быть больше -485, Поле не может быть null\r\n    private int y;\r\n}`}\r\n              </pre>\r\n                        </Typography>\r\n                        <Typography>\r\n                            <b>Please, fill the fields according to the description to create new coordinates\r\n                                entity.</b>\r\n                        </Typography>\r\n                        <Box display=\"grid\" gap={2}>\r\n                            <NumberInput size='small' label='X' value={coordinates.x} onChange={(e) => {\r\n                                coordinates.x = e.target.value;\r\n                                setCoordinates(Object.assign({}, coordinates));\r\n                            }} {...(errors['X'] && {error: true, helperText: errors['X']})}/>\r\n                            <NumberInput size='small' label='Y' value={coordinates.y} onChange={(e) => {\r\n                                coordinates.y = e.target.value;\r\n                                setCoordinates(Object.assign({}, coordinates));\r\n                            }} {...(errors['Y'] && {error: true, helperText: errors['Y']})}/>\r\n                        </Box>\r\n                    </Box>\r\n                </DialogContent>\r\n                {\r\n                    submitting ? <DialogActions>\r\n                        <LoadingButton color='secondary'>Cancel</LoadingButton>\r\n                        <LoadingButton>Update</LoadingButton>\r\n                    </DialogActions> : <DialogActions>\r\n                        <Button onClick={() => {\r\n                            setCoordinates({position: null, startDate: null, endDate: null});\r\n                            props.handleClose()\r\n                        }} variant='contained' color='secondary'>Cancel</Button>\r\n                        <Button onClick={() => {\r\n                            deleteOrganization();\r\n                        }} color='error'>Delete</Button>\r\n                        <Button onClick={() => {\r\n                            validateCoordinatesOnSubmit();\r\n                        }}>Update</Button>\r\n                    </DialogActions>\r\n                }\r\n            </Dialog>\r\n        </div>\r\n    );\r\n}","import React, {useCallback, useEffect, useState} from \"react\";\r\nimport {Box, Button, Grid, Typography} from '@mui/material';\r\nimport {DataGrid} from '@mui/x-data-grid';\r\nimport CoordinatesFilterCollection from './CoordinatesFilterCollection.js';\r\nimport CreateCoordinatesDialog from './CreateCoordinatesDialog.js';\r\nimport EditCoordinatesDialog from './EditCoordinatesDialog.js';\r\nimport NumberInput from '../NumberInput.js';\r\nimport {useSnackbar} from 'notistack';\r\n\r\nexport default function CoordinatesTabPanel() {\r\n    const {enqueueSnackbar} = useSnackbar();\r\n    const axios = require('axios').default;\r\n\r\n    const [openCreateWorkerDialog, setOpenCreateWorkerDialog] = useState(false);\r\n    const [isGridLoaded, setIsGridLoaded] = useState(false);\r\n    const [isTotalLoaded, setIsTotalLoaded] = useState(false);\r\n    const [items, setItems] = useState([]);\r\n    const [selectedItem, setSelectedItem] = useState(null);\r\n    const [displayedNow, setDisplayedNow] = useState(0);\r\n    const [totalForFilter, setTotalForFilter] = useState(0);\r\n    const [page, setPage] = useState(null);\r\n    const [pageSize, setPageSize] = useState(null);\r\n    const [filterCombination, setFilterCombination] = useState([]);\r\n    const [sortOrder, setSortOrder] = useState({field: 'id', order: 'ASC'});\r\n\r\n    const updateSelectedItem = useCallback((selectionModel: GridSelectionModel, details: GridCallbackDetails) => {\r\n        const newSelected = items.find(function (e) {\r\n            return e.id === selectionModel[0]\r\n        })\r\n        setSelectedItem(newSelected)\r\n    }, [items, setSelectedItem])\r\n\r\n    const setProperError = useCallback((requestError) => {\r\n        var newError = requestError;\r\n        if (requestError) {\r\n            if (requestError.response) {\r\n                newError = requestError.response.data.Message;\r\n            } else if (requestError.request) {\r\n                newError = requestError.request\r\n            } else {\r\n                newError = requestError.message;\r\n            }\r\n            enqueueSnackbar(newError, {variant: 'error'});\r\n        }\r\n    }, [enqueueSnackbar]);\r\n\r\n    const updateDataGrid = useCallback(() => {\r\n        axios.get('/coordinates/count')\r\n            .then(function (response) {\r\n                console.log(response.data);\r\n                setTotalForFilter(response.data);\r\n                setIsTotalLoaded(true);\r\n            })\r\n            .catch(function (requestError) {\r\n                setProperError(requestError);\r\n                setIsTotalLoaded(true);\r\n            });\r\n        return axios.get('/coordinates', {\r\n            params: {\r\n                page: page,\r\n                pageSize: pageSize,\r\n                sort: JSON.stringify({type: sortOrder.order, fieldName: sortOrder.field})\r\n            }\r\n        })\r\n            .then(function (response) {\r\n                console.log(response.data);\r\n                var newData = response.data.map(function (current) {\r\n                    var newCurrent = current;\r\n                    newCurrent.organization = JSON.stringify(current.organization, null, '\\t');\r\n                    newCurrent.coordinates = JSON.stringify(current.coordinates, null, '\\t');\r\n\r\n                    return newCurrent;\r\n                });\r\n                setItems(newData);\r\n                setDisplayedNow(newData.length);\r\n                setIsGridLoaded(true);\r\n                setProperError(null);\r\n            })\r\n            .catch(function (requestError) {\r\n                setProperError(requestError);\r\n                setIsGridLoaded(true);\r\n            });\r\n    }, [axios, setProperError, page, pageSize, sortOrder]);\r\n\r\n    const updateDataGridWithFilter = useCallback(() => {\r\n        var params = filterCombination.map((filter) => {\r\n            return {fieldName: filter.field, predicateType: filter.predicate, fieldValue: filter.value};\r\n        });\r\n\r\n        axios.get('/coordinates/count')\r\n            .then(function (response) {\r\n                console.log(response.data);\r\n                setTotalForFilter(response.data);\r\n                setIsTotalLoaded(true);\r\n            })\r\n            .catch(function (requestError) {\r\n                setProperError(requestError);\r\n                setIsTotalLoaded(true);\r\n            });\r\n\r\n        return axios({\r\n            method: 'get',\r\n            url: '/coordinates',\r\n            responseType: 'json',\r\n            params: {\r\n                filters: JSON.stringify(params),\r\n                page: page,\r\n                pageSize: pageSize,\r\n                sort: JSON.stringify({type: sortOrder.order, fieldName: sortOrder.field})\r\n            }\r\n        }).then(function (response) {\r\n            console.log(response.data);\r\n            var newData = response.data.map(function (current) {\r\n                var newCurrent = current;\r\n                newCurrent.organization = JSON.stringify(current.organization, null, '\\t');\r\n                newCurrent.coordinates = JSON.stringify(current.coordinates, null, '\\t');\r\n\r\n                return newCurrent;\r\n            });\r\n            setItems(newData);\r\n            setDisplayedNow(newData.length);\r\n            setIsGridLoaded(true);\r\n            setProperError(null);\r\n        })\r\n            .catch(function (requestError) {\r\n                setProperError(requestError);\r\n                setIsGridLoaded(true);\r\n            });\r\n    }, [axios, filterCombination, setProperError, pageSize, page, sortOrder]);\r\n\r\n    useEffect(() => {\r\n        if (items.length === 0) {\r\n            updateDataGrid();\r\n        }\r\n\r\n        axios.get('/coordinates/count')\r\n            .then(function (response) {\r\n                console.log(response.data);\r\n                setTotalForFilter(response.data);\r\n                setIsTotalLoaded(true);\r\n            })\r\n            .catch(function (requestError) {\r\n                setProperError(requestError);\r\n                setIsTotalLoaded(true);\r\n            });\r\n    }, [])\r\n\r\n    const columns: GridColDef[] = [\r\n        {field: 'id', headerName: 'Id', width: 50, sortable: false},\r\n        {field: 'x', headerName: 'X', width: 150, sortable: false},\r\n        {field: 'y', headerName: 'Y', width: 150, sortable: false},\r\n    ];\r\n\r\n    if (isGridLoaded || isTotalLoaded) {\r\n        return <Grid container spacing={4}>\r\n            <Grid item xl={8}>\r\n                {\r\n                    isGridLoaded ?\r\n                        <div>\r\n                            <Box sx={{height: Math.max(Math.min(56 * (displayedNow + 1), 1000), 620) + 'px'}}>\r\n                                <DataGrid disableColumnFilter rows={items} columns={columns} hideFooter={true}\r\n                                          onSelectionModelChange={updateSelectedItem}/>\r\n                            </Box>\r\n                            <Typography sx={{mb: 2}}>Displayed: {displayedNow}</Typography>\r\n                            <NumberInput size='small' label='Page' placeholder='0' value={page} onChange={(e) => {\r\n                                setPage(e.target.value)\r\n                            }}/>\r\n                            <NumberInput size='small' label='Page size' placeholder='10' value={pageSize}\r\n                                         onChange={(e) => {\r\n                                             setPageSize(e.target.value)\r\n                                         }}/>\r\n                        </div> :\r\n                        <Box sx={{height: '100%', width: '50%'}}>\r\n                            Grid is loading...\r\n                        </Box>\r\n                }\r\n                <Box sx={{mt: 1, mb: 2}}>\r\n                    {\r\n                        isTotalLoaded ?\r\n                            <Typography>Total: {totalForFilter}</Typography> :\r\n                            <Typography>Total: Loading...</Typography>\r\n                    }\r\n                </Box>\r\n                <Button variant=\"contained\" onClick={() => {\r\n                    setOpenCreateWorkerDialog(true)\r\n                }}>Add element</Button>\r\n            </Grid>\r\n            <Grid item xl={4}>\r\n                <Box sx={{height: '100%', width: '50%'}}>\r\n                    <CoordinatesFilterCollection filters={filterCombination} updateFilters={setFilterCombination}\r\n                                                 sortOrder={sortOrder} setSortOrder={setSortOrder}/>\r\n                    <Button sx={{mt: 3}} variant=\"contained\" onClick={updateDataGridWithFilter}>Apply filter</Button>\r\n                </Box>\r\n            </Grid>\r\n            {openCreateWorkerDialog ? <CreateCoordinatesDialog open={openCreateWorkerDialog} handleClose={() => {\r\n                    setOpenCreateWorkerDialog(false);\r\n                    updateDataGrid()\r\n                }} setProperError={setProperError}/>\r\n                : ''}\r\n            {selectedItem ? <EditCoordinatesDialog open={selectedItem} handleClose={() => {\r\n                    setSelectedItem(null);\r\n                    updateDataGrid()\r\n                }} item={selectedItem} setProperError={setProperError}/>\r\n                : ''}\r\n        </Grid>\r\n    } else {\r\n        return <Box sx={{height: '100%', width: '50%'}}>\r\n            Loading...\r\n        </Box>\r\n    }\r\n\r\n\r\n}","import * as React from 'react';\nimport {Box, Tab, Tabs} from '@mui/material';\nimport TabPanel from './TabPanel.js';\nimport WorkerTabPanel from './Worker/WorkerTabPanel.js';\nimport OrganizationTabPanel from './Organizations/OrganizationTabPanel.js';\nimport CoordinatesTabPanel from './Coordinates/CoordinatesTabPanel.js';\nimport axios from 'axios'\nimport queryString from 'query-string'\n\naxios.defaults.baseURL = '/app'\n// Add a request interceptor\naxios.interceptors.request.use(function (config) {\n    // Serialize the parameteters\n    config.paramsSerializer = params => queryString.stringify(params, {arrayFormat: 'brackets'})\n    return config;\n});\n\nfunction a11yProps(index: number) {\n    return {\n        id: `simple-tab-${index}`,\n        'aria-controls': `simple-tabpanel-${index}`,\n    };\n}\n\nexport default function App() {\n    const [value, setValue] = React.useState(0);\n\n    const handleChange = (event: React.SyntheticEvent, newValue: number) => {\n        setValue(newValue);\n    };\n\n    return (\n        <Box sx={{width: '100%', backgroundColor: '#F6F6F6'}}>\n            <Box>\n                <Tabs\n                    value={value}\n                    onChange={handleChange}\n                    centered\n                    indicatorColor='primary'>\n                    <Tab label=\"Workers\" {...a11yProps(0)} />\n                    <Tab label=\"Coordinates\" {...a11yProps(1)} />\n                    <Tab label=\"Organizations\" {...a11yProps(2)} />\n                </Tabs>\n            </Box>\n            <TabPanel value={value} index={0}>\n                <WorkerTabPanel/>\n            </TabPanel>\n            <TabPanel value={value} index={1}>\n                <CoordinatesTabPanel/>\n            </TabPanel>\n            <TabPanel value={value} index={2}>\n                <OrganizationTabPanel/>\n            </TabPanel>\n        </Box>\n    );\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {Button, Typography} from '@mui/material';\nimport {SnackbarProvider} from 'notistack';\nimport DateAdapter from '@mui/lab/AdapterDayjs';\nimport LocalizationProvider from '@mui/lab/LocalizationProvider';\nimport dayjz from 'dayjs';\n\nconst notistackRef = React.createRef();\nconst onClickDismiss = key => () => {\n    notistackRef.current.closeSnackbar(key);\n}\nvar utc = require('dayjs/plugin/utc')\nvar timezone = require('dayjs/plugin/timezone') // dependent on utc plugin\ndayjz.extend(utc)\ndayjz.extend(timezone)\ndocument.title = \"SOA 1\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <link rel=\"stylesheet\" href=\"https://fonts.googleapis.com/css?family=Roboto:300,400,500,700&display=swap\"/>\n        <link rel=\"stylesheet\" href=\"https://fonts.googleapis.com/icon?family=Material+Icons\"/>\n        <SnackbarProvider\n            maxSnack={2}\n            hideIconVariant={false}\n            ref={notistackRef}\n            action={(key) => (\n                <Button onClick={onClickDismiss(key)}>\n                    <Typography color='white'>CLOSE</Typography>\n                </Button>\n            )}>\n            <LocalizationProvider dateAdapter={DateAdapter}>\n                <App/>\n            </LocalizationProvider>\n        </SnackbarProvider>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}